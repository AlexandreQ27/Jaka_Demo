{
    "pythonClassName": "tensorflow_datasets.core.features.features_dict.FeaturesDict",
    "featuresDict": {
        "features": {
            "attributes": {
                "pythonClassName": "tensorflow_datasets.core.features.features_dict.FeaturesDict",
                "featuresDict": {
                    "features": {
                        "collection_mode_name": {
                            "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                            "tensor": {
                                "shape": {},
                                "dtype": "string",
                                "encoding": "none"
                            }
                        },
                        "collection_mode": {
                            "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                            "tensor": {
                                "shape": {},
                                "dtype": "int64",
                                "encoding": "none"
                            }
                        },
                        "task_family_name": {
                            "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                            "tensor": {
                                "shape": {},
                                "dtype": "string",
                                "encoding": "none"
                            }
                        },
                        "location_name": {
                            "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                            "tensor": {
                                "shape": {},
                                "dtype": "string",
                                "encoding": "none"
                            }
                        },
                        "env_name": {
                            "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                            "tensor": {
                                "shape": {},
                                "dtype": "string",
                                "encoding": "none"
                            }
                        },
                        "env": {
                            "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                            "tensor": {
                                "shape": {},
                                "dtype": "int64",
                                "encoding": "none"
                            }
                        },
                        "objects_family_name": {
                            "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                            "tensor": {
                                "shape": {},
                                "dtype": "string",
                                "encoding": "none"
                            }
                        },
                        "data_type": {
                            "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                            "tensor": {
                                "shape": {},
                                "dtype": "int64",
                                "encoding": "none"
                            }
                        },
                        "objects_family": {
                            "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                            "tensor": {
                                "shape": {},
                                "dtype": "int64",
                                "encoding": "none"
                            }
                        },
                        "location": {
                            "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                            "tensor": {
                                "shape": {},
                                "dtype": "int64",
                                "encoding": "none"
                            }
                        },
                        "task_family": {
                            "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                            "tensor": {
                                "shape": {},
                                "dtype": "int64",
                                "encoding": "none"
                            }
                        },
                        "data_type_name": {
                            "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                            "tensor": {
                                "shape": {},
                                "dtype": "string",
                                "encoding": "none"
                            }
                        }
                    }
                }
            },
            "aspects": {
                "pythonClassName": "tensorflow_datasets.core.features.features_dict.FeaturesDict",
                "featuresDict": {
                    "features": {
                        "feasible": {
                            "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                            "tensor": {
                                "shape": {},
                                "dtype": "bool",
                                "encoding": "none"
                            }
                        },
                        "success": {
                            "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                            "tensor": {
                                "shape": {},
                                "dtype": "bool",
                                "encoding": "none"
                            }
                        },
                        "undesirable": {
                            "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                            "tensor": {
                                "shape": {},
                                "dtype": "bool",
                                "encoding": "none"
                            }
                        },
                        "already_success": {
                            "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                            "tensor": {
                                "shape": {},
                                "dtype": "bool",
                                "encoding": "none"
                            }
                        },
                        "has_aspects": {
                            "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                            "tensor": {
                                "shape": {},
                                "dtype": "bool",
                                "encoding": "none"
                            }
                        }
                    }
                },
                "description": "Session Aspects for crowdcompute ratings"
            },
            "steps": {
                "pythonClassName": "tensorflow_datasets.core.features.dataset_feature.Dataset",
                "sequence": {
                    "feature": {
                        "pythonClassName": "tensorflow_datasets.core.features.features_dict.FeaturesDict",
                        "featuresDict": {
                            "features": {
                                "is_terminal": {
                                    "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                    "tensor": {
                                        "shape": {},
                                        "dtype": "bool",
                                        "encoding": "none"
                                    }
                                },
                                "is_first": {
                                    "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                    "tensor": {
                                        "shape": {},
                                        "dtype": "bool",
                                        "encoding": "none"
                                    }
                                },
                                "action": {
                                    "pythonClassName": "tensorflow_datasets.core.features.features_dict.FeaturesDict",
                                    "featuresDict": {
                                        "features": {
                                            "gripper_closedness_action": {
                                                "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                                "tensor": {
                                                    "shape": {
                                                        "dimensions": [
                                                            "1"
                                                        ]
                                                    },
                                                    "dtype": "float32",
                                                    "encoding": "none"
                                                },
                                                "description": "continuous gripper position"
                                            },
                                            "terminate_episode": {
                                                "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                                "tensor": {
                                                    "shape": {
                                                        "dimensions": [
                                                            "3"
                                                        ]
                                                    },
                                                    "dtype": "int32",
                                                    "encoding": "none"
                                                }
                                            },
                                            "base_displacement_vector": {
                                                "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                                "tensor": {
                                                    "shape": {
                                                        "dimensions": [
                                                            "2"
                                                        ]
                                                    },
                                                    "dtype": "float32",
                                                    "encoding": "none"
                                                }
                                            },
                                            "rotation_delta": {
                                                "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                                "tensor": {
                                                    "shape": {
                                                        "dimensions": [
                                                            "3"
                                                        ]
                                                    },
                                                    "dtype": "float32",
                                                    "encoding": "none"
                                                },
                                                "description": "rpy commanded orientation displacement, in base-relative frame"
                                            },
                                            "base_displacement_vertical_rotation": {
                                                "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                                "tensor": {
                                                    "shape": {
                                                        "dimensions": [
                                                            "1"
                                                        ]
                                                    },
                                                    "dtype": "float32",
                                                    "encoding": "none"
                                                }
                                            },
                                            "world_vector": {
                                                "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                                "tensor": {
                                                    "shape": {
                                                        "dimensions": [
                                                            "3"
                                                        ]
                                                    },
                                                    "dtype": "float32",
                                                    "encoding": "none"
                                                },
                                                "description": "commanded end-effector displacement, in base-relative frame"
                                            }
                                        }
                                    }
                                },
                                "reward": {
                                    "pythonClassName": "tensorflow_datasets.core.features.scalar.Scalar",
                                    "tensor": {
                                        "shape": {},
                                        "dtype": "float32",
                                        "encoding": "none"
                                    }
                                },
                                "observation": {
                                    "pythonClassName": "tensorflow_datasets.core.features.features_dict.FeaturesDict",
                                    "featuresDict": {
                                        "features": {
                                            "rotation_delta_to_go": {
                                                "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                                "tensor": {
                                                    "shape": {
                                                        "dimensions": [
                                                            "3"
                                                        ]
                                                    },
                                                    "dtype": "float32",
                                                    "encoding": "none"
                                                },
                                                "description": "rotational displacement from current orientation to target"
                                            },
                                            "orientation_start": {
                                                "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                                "tensor": {
                                                    "shape": {
                                                        "dimensions": [
                                                            "4"
                                                        ]
                                                    },
                                                    "dtype": "float32",
                                                    "encoding": "none"
                                                }
                                            },
                                            "height_to_bottom": {
                                                "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                                "tensor": {
                                                    "shape": {
                                                        "dimensions": [
                                                            "1"
                                                        ]
                                                    },
                                                    "dtype": "float32",
                                                    "encoding": "none"
                                                },
                                                "description": "height of end-effector from ground"
                                            },
                                            "natural_language_instruction": {
                                                "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                                "tensor": {
                                                    "shape": {},
                                                    "dtype": "string",
                                                    "encoding": "none"
                                                }
                                            },
                                            "natural_language_embedding": {
                                                "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                                "tensor": {
                                                    "shape": {
                                                        "dimensions": [
                                                            "512"
                                                        ]
                                                    },
                                                    "dtype": "float32",
                                                    "encoding": "none"
                                                }
                                            },
                                            "workspace_bounds": {
                                                "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                                "tensor": {
                                                    "shape": {
                                                        "dimensions": [
                                                            "3",
                                                            "3"
                                                        ]
                                                    },
                                                    "dtype": "float32",
                                                    "encoding": "none"
                                                }
                                            },
                                            "robot_orientation_positions_box": {
                                                "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                                "tensor": {
                                                    "shape": {
                                                        "dimensions": [
                                                            "3",
                                                            "3"
                                                        ]
                                                    },
                                                    "dtype": "float32",
                                                    "encoding": "none"
                                                }
                                            },
                                            "gripper_closedness_commanded": {
                                                "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                                "tensor": {
                                                    "shape": {
                                                        "dimensions": [
                                                            "1"
                                                        ]
                                                    },
                                                    "dtype": "float32",
                                                    "encoding": "none"
                                                },
                                                "description": "continuous gripper position"
                                            },
                                            "base_pose_tool_reached": {
                                                "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                                "tensor": {
                                                    "shape": {
                                                        "dimensions": [
                                                            "7"
                                                        ]
                                                    },
                                                    "dtype": "float32",
                                                    "encoding": "none"
                                                },
                                                "description": "end-effector base-relative position+quaternion pose"
                                            },
                                            "vector_to_go": {
                                                "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                                "tensor": {
                                                    "shape": {
                                                        "dimensions": [
                                                            "3"
                                                        ]
                                                    },
                                                    "dtype": "float32",
                                                    "encoding": "none"
                                                },
                                                "description": "displacement from current end-effector position to target"
                                            },
                                            "src_rotation": {
                                                "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                                "tensor": {
                                                    "shape": {
                                                        "dimensions": [
                                                            "4"
                                                        ]
                                                    },
                                                    "dtype": "float32",
                                                    "encoding": "none"
                                                }
                                            },
                                            "gripper_closed": {
                                                "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                                "tensor": {
                                                    "shape": {
                                                        "dimensions": [
                                                            "1"
                                                        ]
                                                    },
                                                    "dtype": "float32",
                                                    "encoding": "none"
                                                }
                                            },
                                            "image": {
                                                "pythonClassName": "tensorflow_datasets.core.features.image_feature.Image",
                                                "image": {
                                                    "shape": {
                                                        "dimensions": [
                                                            "256",
                                                            "320",
                                                            "3"
                                                        ]
                                                    },
                                                    "dtype": "uint8",
                                                    "encodingFormat": "jpeg"
                                                }
                                            },
                                            "orientation_box": {
                                                "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                                "tensor": {
                                                    "shape": {
                                                        "dimensions": [
                                                            "2",
                                                            "3"
                                                        ]
                                                    },
                                                    "dtype": "float32",
                                                    "encoding": "none"
                                                }
                                            }
                                        }
                                    }
                                },
                                "is_last": {
                                    "pythonClassName": "tensorflow_datasets.core.features.tensor_feature.Tensor",
                                    "tensor": {
                                        "shape": {},
                                        "dtype": "bool",
                                        "encoding": "none"
                                    }
                                }
                            }
                        }
                    },
                    "length": "-1"
                }
            }
        }
    }
}